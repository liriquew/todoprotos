// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.27.2
// source: notes/notes.proto

package notes

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Note struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title     string                 `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	Content   string                 `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	Duration  *durationpb.Duration   `protobuf:"bytes,3,opt,name=Duration,proto3,oneof" json:"Duration,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=CreatedAt,proto3,oneof" json:"CreatedAt,omitempty"`
}

func (x *Note) Reset() {
	*x = Note{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notes_notes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Note) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Note) ProtoMessage() {}

func (x *Note) ProtoReflect() protoreflect.Message {
	mi := &file_notes_notes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Note.ProtoReflect.Descriptor instead.
func (*Note) Descriptor() ([]byte, []int) {
	return file_notes_notes_proto_rawDescGZIP(), []int{0}
}

func (x *Note) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Note) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Note) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *Note) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type NoteIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID int64 `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`
	NID int64 `protobuf:"varint,2,opt,name=NID,proto3" json:"NID,omitempty"`
}

func (x *NoteIDRequest) Reset() {
	*x = NoteIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notes_notes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoteIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoteIDRequest) ProtoMessage() {}

func (x *NoteIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notes_notes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoteIDRequest.ProtoReflect.Descriptor instead.
func (*NoteIDRequest) Descriptor() ([]byte, []int) {
	return file_notes_notes_proto_rawDescGZIP(), []int{1}
}

func (x *NoteIDRequest) GetUID() int64 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *NoteIDRequest) GetNID() int64 {
	if x != nil {
		return x.NID
	}
	return 0
}

type NoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NID int64 `protobuf:"varint,1,opt,name=NID,proto3" json:"NID,omitempty"`
}

func (x *NoteResponse) Reset() {
	*x = NoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notes_notes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoteResponse) ProtoMessage() {}

func (x *NoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notes_notes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoteResponse.ProtoReflect.Descriptor instead.
func (*NoteResponse) Descriptor() ([]byte, []int) {
	return file_notes_notes_proto_rawDescGZIP(), []int{2}
}

func (x *NoteResponse) GetNID() int64 {
	if x != nil {
		return x.NID
	}
	return 0
}

type UserIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID int64 `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`
}

func (x *UserIDRequest) Reset() {
	*x = UserIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notes_notes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserIDRequest) ProtoMessage() {}

func (x *UserIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notes_notes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserIDRequest.ProtoReflect.Descriptor instead.
func (*UserIDRequest) Descriptor() ([]byte, []int) {
	return file_notes_notes_proto_rawDescGZIP(), []int{3}
}

func (x *UserIDRequest) GetUID() int64 {
	if x != nil {
		return x.UID
	}
	return 0
}

type CreateNoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID  int64 `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`
	Note *Note `protobuf:"bytes,2,opt,name=Note,proto3" json:"Note,omitempty"`
}

func (x *CreateNoteRequest) Reset() {
	*x = CreateNoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notes_notes_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNoteRequest) ProtoMessage() {}

func (x *CreateNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notes_notes_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNoteRequest.ProtoReflect.Descriptor instead.
func (*CreateNoteRequest) Descriptor() ([]byte, []int) {
	return file_notes_notes_proto_rawDescGZIP(), []int{4}
}

func (x *CreateNoteRequest) GetUID() int64 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *CreateNoteRequest) GetNote() *Note {
	if x != nil {
		return x.Note
	}
	return nil
}

type UpdateNoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID  int64 `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`
	NID  int64 `protobuf:"varint,2,opt,name=NID,proto3" json:"NID,omitempty"`
	Note *Note `protobuf:"bytes,3,opt,name=Note,proto3" json:"Note,omitempty"`
}

func (x *UpdateNoteRequest) Reset() {
	*x = UpdateNoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notes_notes_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNoteRequest) ProtoMessage() {}

func (x *UpdateNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notes_notes_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNoteRequest.ProtoReflect.Descriptor instead.
func (*UpdateNoteRequest) Descriptor() ([]byte, []int) {
	return file_notes_notes_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateNoteRequest) GetUID() int64 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *UpdateNoteRequest) GetNID() int64 {
	if x != nil {
		return x.NID
	}
	return 0
}

func (x *UpdateNoteRequest) GetNote() *Note {
	if x != nil {
		return x.Note
	}
	return nil
}

type NoteIDList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID     int64   `protobuf:"varint,1,opt,name=UID,proto3" json:"UID,omitempty"`
	NoteIDs []int64 `protobuf:"varint,2,rep,packed,name=NoteIDs,proto3" json:"NoteIDs,omitempty"`
}

func (x *NoteIDList) Reset() {
	*x = NoteIDList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notes_notes_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoteIDList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoteIDList) ProtoMessage() {}

func (x *NoteIDList) ProtoReflect() protoreflect.Message {
	mi := &file_notes_notes_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoteIDList.ProtoReflect.Descriptor instead.
func (*NoteIDList) Descriptor() ([]byte, []int) {
	return file_notes_notes_proto_rawDescGZIP(), []int{6}
}

func (x *NoteIDList) GetUID() int64 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *NoteIDList) GetNoteIDs() []int64 {
	if x != nil {
		return x.NoteIDs
	}
	return nil
}

type NoteListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NID  int64 `protobuf:"varint,1,opt,name=NID,proto3" json:"NID,omitempty"`
	Note *Note `protobuf:"bytes,2,opt,name=Note,proto3" json:"Note,omitempty"`
}

func (x *NoteListItem) Reset() {
	*x = NoteListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notes_notes_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoteListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoteListItem) ProtoMessage() {}

func (x *NoteListItem) ProtoReflect() protoreflect.Message {
	mi := &file_notes_notes_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoteListItem.ProtoReflect.Descriptor instead.
func (*NoteListItem) Descriptor() ([]byte, []int) {
	return file_notes_notes_proto_rawDescGZIP(), []int{7}
}

func (x *NoteListItem) GetNID() int64 {
	if x != nil {
		return x.NID
	}
	return 0
}

func (x *NoteListItem) GetNote() *Note {
	if x != nil {
		return x.Note
	}
	return nil
}

type UIDList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UIDs []int64 `protobuf:"varint,1,rep,packed,name=UIDs,proto3" json:"UIDs,omitempty"`
}

func (x *UIDList) Reset() {
	*x = UIDList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notes_notes_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UIDList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UIDList) ProtoMessage() {}

func (x *UIDList) ProtoReflect() protoreflect.Message {
	mi := &file_notes_notes_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UIDList.ProtoReflect.Descriptor instead.
func (*UIDList) Descriptor() ([]byte, []int) {
	return file_notes_notes_proto_rawDescGZIP(), []int{8}
}

func (x *UIDList) GetUIDs() []int64 {
	if x != nil {
		return x.UIDs
	}
	return nil
}

type NoteList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notes []*NoteListItem `protobuf:"bytes,1,rep,name=Notes,proto3" json:"Notes,omitempty"`
}

func (x *NoteList) Reset() {
	*x = NoteList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notes_notes_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoteList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoteList) ProtoMessage() {}

func (x *NoteList) ProtoReflect() protoreflect.Message {
	mi := &file_notes_notes_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoteList.ProtoReflect.Descriptor instead.
func (*NoteList) Descriptor() ([]byte, []int) {
	return file_notes_notes_proto_rawDescGZIP(), []int{9}
}

func (x *NoteList) GetNotes() []*NoteListItem {
	if x != nil {
		return x.Notes
	}
	return nil
}

var File_notes_notes_proto protoreflect.FileDescriptor

var file_notes_notes_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x2f, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcc, 0x01, 0x0a, 0x04,
	0x4e, 0x6f, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x3d, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48,
	0x01, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x33, 0x0a, 0x0d, 0x4e, 0x6f,
	0x74, 0x65, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x55,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x10, 0x0a,
	0x03, 0x4e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x4e, 0x49, 0x44, 0x22,
	0x20, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x4e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x4e, 0x49,
	0x44, 0x22, 0x21, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x55, 0x49, 0x44, 0x22, 0x46, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x1f, 0x0a, 0x04, 0x4e,
	0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6e, 0x6f, 0x74, 0x65,
	0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x22, 0x58, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x55, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x4e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x4e, 0x49, 0x44, 0x12, 0x1f, 0x0a, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x65,
	0x52, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x22, 0x38, 0x0a, 0x0a, 0x4e, 0x6f, 0x74, 0x65, 0x49, 0x44,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4e, 0x6f, 0x74, 0x65, 0x49, 0x44,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x4e, 0x6f, 0x74, 0x65, 0x49, 0x44, 0x73,
	0x22, 0x41, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x10, 0x0a, 0x03, 0x4e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x4e,
	0x49, 0x44, 0x12, 0x1f, 0x0a, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x04, 0x4e,
	0x6f, 0x74, 0x65, 0x22, 0x1d, 0x0a, 0x07, 0x55, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x55, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x04, 0x55, 0x49,
	0x44, 0x73, 0x22, 0x35, 0x0a, 0x08, 0x4e, 0x6f, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29,
	0x0a, 0x05, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6e, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x32, 0x8c, 0x03, 0x0a, 0x05, 0x4e, 0x6f,
	0x74, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74,
	0x65, 0x12, 0x18, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6e, 0x6f,
	0x74, 0x65, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2c, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x6e, 0x6f,
	0x74, 0x65, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0b, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x3b,
	0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x6e,
	0x6f, 0x74, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x4e,
	0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x6e, 0x6f, 0x74, 0x65,
	0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x6f, 0x74, 0x65, 0x73, 0x49, 0x44, 0x12, 0x14, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e,
	0x6e, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x33, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x65,
	0x73, 0x12, 0x11, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x49, 0x44,
	0x4c, 0x69, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x4e, 0x6f, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x0e, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x2e,
	0x55, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x2e,
	0x4e, 0x6f, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x14, 0x5a, 0x12, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x3b, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_notes_notes_proto_rawDescOnce sync.Once
	file_notes_notes_proto_rawDescData = file_notes_notes_proto_rawDesc
)

func file_notes_notes_proto_rawDescGZIP() []byte {
	file_notes_notes_proto_rawDescOnce.Do(func() {
		file_notes_notes_proto_rawDescData = protoimpl.X.CompressGZIP(file_notes_notes_proto_rawDescData)
	})
	return file_notes_notes_proto_rawDescData
}

var file_notes_notes_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_notes_notes_proto_goTypes = []interface{}{
	(*Note)(nil),                  // 0: notes.Note
	(*NoteIDRequest)(nil),         // 1: notes.NoteIDRequest
	(*NoteResponse)(nil),          // 2: notes.NoteResponse
	(*UserIDRequest)(nil),         // 3: notes.UserIDRequest
	(*CreateNoteRequest)(nil),     // 4: notes.CreateNoteRequest
	(*UpdateNoteRequest)(nil),     // 5: notes.UpdateNoteRequest
	(*NoteIDList)(nil),            // 6: notes.NoteIDList
	(*NoteListItem)(nil),          // 7: notes.NoteListItem
	(*UIDList)(nil),               // 8: notes.UIDList
	(*NoteList)(nil),              // 9: notes.NoteList
	(*durationpb.Duration)(nil),   // 10: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil), // 11: google.protobuf.Timestamp
}
var file_notes_notes_proto_depIdxs = []int32{
	10, // 0: notes.Note.Duration:type_name -> google.protobuf.Duration
	11, // 1: notes.Note.CreatedAt:type_name -> google.protobuf.Timestamp
	0,  // 2: notes.CreateNoteRequest.Note:type_name -> notes.Note
	0,  // 3: notes.UpdateNoteRequest.Note:type_name -> notes.Note
	0,  // 4: notes.NoteListItem.Note:type_name -> notes.Note
	7,  // 5: notes.NoteList.Notes:type_name -> notes.NoteListItem
	4,  // 6: notes.Notes.CreateNote:input_type -> notes.CreateNoteRequest
	1,  // 7: notes.Notes.GetNote:input_type -> notes.NoteIDRequest
	5,  // 8: notes.Notes.UpdateNote:input_type -> notes.UpdateNoteRequest
	1,  // 9: notes.Notes.DeleteNote:input_type -> notes.NoteIDRequest
	3,  // 10: notes.Notes.ListUserNotesID:input_type -> notes.UserIDRequest
	6,  // 11: notes.Notes.ListUserNotes:input_type -> notes.NoteIDList
	8,  // 12: notes.Notes.ListUsersNotes:input_type -> notes.UIDList
	2,  // 13: notes.Notes.CreateNote:output_type -> notes.NoteResponse
	0,  // 14: notes.Notes.GetNote:output_type -> notes.Note
	2,  // 15: notes.Notes.UpdateNote:output_type -> notes.NoteResponse
	2,  // 16: notes.Notes.DeleteNote:output_type -> notes.NoteResponse
	6,  // 17: notes.Notes.ListUserNotesID:output_type -> notes.NoteIDList
	9,  // 18: notes.Notes.ListUserNotes:output_type -> notes.NoteList
	9,  // 19: notes.Notes.ListUsersNotes:output_type -> notes.NoteList
	13, // [13:20] is the sub-list for method output_type
	6,  // [6:13] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_notes_notes_proto_init() }
func file_notes_notes_proto_init() {
	if File_notes_notes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_notes_notes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Note); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notes_notes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoteIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notes_notes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notes_notes_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notes_notes_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notes_notes_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notes_notes_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoteIDList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notes_notes_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoteListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notes_notes_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UIDList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notes_notes_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoteList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_notes_notes_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_notes_notes_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_notes_notes_proto_goTypes,
		DependencyIndexes: file_notes_notes_proto_depIdxs,
		MessageInfos:      file_notes_notes_proto_msgTypes,
	}.Build()
	File_notes_notes_proto = out.File
	file_notes_notes_proto_rawDesc = nil
	file_notes_notes_proto_goTypes = nil
	file_notes_notes_proto_depIdxs = nil
}
